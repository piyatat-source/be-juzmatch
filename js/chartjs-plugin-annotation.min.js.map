{"version":3,"file":"chartjs-plugin-annotation.min.js","sources":["../src/events.js","../src/helpers.js","../src/types/box.js","../src/types/line.js","../src/types/ellipse.js","../src/types/point.js","../src/annotation.js","../src/index.js"],"sourcesContent":["import {distanceBetweenPoints, callback as callHandler} from 'chart.js/helpers';\n\nconst clickHooks = ['click', 'dblclick'];\nconst moveHooks = ['enter', 'leave'];\nexport const hooks = clickHooks.concat(moveHooks);\n\nexport function updateListeners(chart, state, options) {\n  const annotations = state.annotations || [];\n  state.listened = false;\n  state.moveListened = false;\n\n  hooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.listened = true;\n      state.listeners[hook] = options[hook];\n    }\n  });\n  moveHooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    annotations.forEach(scope => {\n      if (!state.listened) {\n        clickHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n          }\n        });\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\nexport function handleEvent(chart, state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      handleMoveEvents(chart, state, event);\n      break;\n    case 'click':\n      handleClickEvents(chart, state, event, options);\n      break;\n    default:\n    }\n  }\n}\n\nfunction handleMoveEvents(chart, state, event) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let element;\n\n  if (event.type === 'mousemove') {\n    element = getNearestItem(state.elements, event);\n  }\n\n  const previous = state.hovered;\n  state.hovered = element;\n\n  dispatchMoveEvents(chart, state, {previous, element}, event);\n}\n\nfunction dispatchMoveEvents(chart, state, elements, event) {\n  const {previous, element} = elements;\n  if (previous && previous !== element) {\n    dispatchEvent(chart, previous.options.leave || state.listeners.leave, previous, event);\n  }\n  if (element && element !== previous) {\n    dispatchEvent(chart, element.options.enter || state.listeners.enter, element, event);\n  }\n}\n\nfunction handleClickEvents(chart, state, event, options) {\n  const listeners = state.listeners;\n  const element = getNearestItem(state.elements, event);\n  if (element) {\n    const elOpts = element.options;\n    const dblclick = elOpts.dblclick || listeners.dblclick;\n    const click = elOpts.click || listeners.click;\n    if (element.clickTimeout) {\n      // 2nd click before timeout, so its a double click\n      clearTimeout(element.clickTimeout);\n      delete element.clickTimeout;\n      dispatchEvent(chart, dblclick, element, event);\n    } else if (dblclick) {\n      // if there is a dblclick handler, wait for dblClickSpeed ms before deciding its a click\n      element.clickTimeout = setTimeout(() => {\n        delete element.clickTimeout;\n        dispatchEvent(chart, click, element, event);\n      }, options.dblClickSpeed);\n    } else {\n      // no double click handler, just call the click handler directly\n      dispatchEvent(chart, click, element, event);\n    }\n  }\n}\n\nfunction dispatchEvent(chart, handler, element, event) {\n  callHandler(handler, [{chart, element}, event]);\n}\n\nfunction getNearestItem(elements, position) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return elements\n    .filter((element) => element.options.display && element.inRange(position.x, position.y))\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const distance = distanceBetweenPoints(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1)[0]; // return only the top item\n}\n","import {isFinite} from 'chart.js/helpers';\n\nexport const clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\nexport function clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\nexport function scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {{x: number, y: number}} point - the point to rotate\n * @param {{x: number, y: number}} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {{x: number, y: number}} rotated point\n */\nexport function rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n","import {Element} from 'chart.js';\nimport {addRoundedRectPath, toTRBLCorners, valueOrDefault} from 'chart.js/helpers';\nimport {clampAll, scaleValue} from '../helpers';\n\nexport default class BoxAnnotation extends Element {\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n\n    return mouseX >= x &&\n\t\t\tmouseX <= x + width &&\n\t\t\tmouseY >= y &&\n\t\t\tmouseY <= y + height;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, width, height} = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition);\n    return {\n      x: x + width / 2,\n      y: y + height / 2\n    };\n  }\n\n  draw(ctx) {\n    const {x, y, width, height, options} = this;\n\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    ctx.beginPath();\n    addRoundedRectPath(ctx, {\n      x, y, w: width, h: height,\n      // TODO: v2 remove support for cornerRadius\n      radius: clampAll(toTRBLCorners(valueOrDefault(options.cornerRadius, options.borderRadius)), 0, Math.min(width, height) / 2)\n    });\n    ctx.closePath();\n    ctx.fill();\n\n    // If no border, don't draw it\n    if (options.borderWidth) {\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const xScale = chart.scales[options.xScaleID];\n    const yScale = chart.scales[options.yScaleID];\n    let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n    let min, max;\n\n    if (!xScale && !yScale) {\n      return {options: {}};\n    }\n\n    if (xScale) {\n      min = scaleValue(xScale, options.xMin, x);\n      max = scaleValue(xScale, options.xMax, x2);\n      x = Math.min(min, max);\n      x2 = Math.max(min, max);\n    }\n\n    if (yScale) {\n      min = scaleValue(yScale, options.yMin, y2);\n      max = scaleValue(yScale, options.yMax, y);\n      y = Math.min(min, max);\n      y2 = Math.max(min, max);\n    }\n\n    return {\n      x,\n      y,\n      x2,\n      y2,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  borderRadius: 0,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n","import {Element} from 'chart.js';\nimport {addRoundedRectPath, isArray, toFont, toRadians, toTRBLCorners, valueOrDefault} from 'chart.js/helpers';\nimport {clamp, clampAll, scaleValue, rotated} from '../helpers';\n\nconst PI = Math.PI;\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst toPercent = (s) => typeof s === 'string' && s.endsWith('%') && parseFloat(s) / 100;\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nexport default class LineAnnotation extends Element {\n  intersects(x, y, epsilon = 0.001) {\n    // Adapted from https://stackoverflow.com/a/6853926/25507\n    const sqr = v => v * v;\n    const {x: x1, y: y1, x2, y2} = this;\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const lenSq = sqr(dx) + sqr(dy);\n    const t = lenSq === 0 ? -1 : ((x - x1) * dx + (y - y1) * dy) / lenSq;\n    let xx, yy;\n    if (t < 0) {\n      xx = x1;\n      yy = y1;\n    } else if (t > 1) {\n      xx = x2;\n      yy = y2;\n    } else {\n      xx = x1 + t * dx;\n      yy = y1 + t * dy;\n    }\n    return (sqr(x - xx) + sqr(y - yy)) < epsilon;\n  }\n\n  labelIsVisible(chartArea) {\n    const label = this.options.label;\n\n    const inside = !chartArea || isLineInArea(this, chartArea);\n    return inside && label && label.enabled && label.content;\n  }\n\n  isOnLabel(mouseX, mouseY) {\n    const {labelRect} = this;\n    if (!labelRect || !this.labelIsVisible()) {\n      return false;\n    }\n\n    const {x, y} = rotated({x: mouseX, y: mouseY}, labelRect, -labelRect.rotation);\n    const w2 = labelRect.width / 2;\n    const h2 = labelRect.height / 2;\n    return x >= labelRect.x - w2 && x <= labelRect.x + w2 &&\n      y >= labelRect.y - h2 && y <= labelRect.y + h2;\n  }\n\n  inRange(x, y) {\n    const epsilon = this.options.borderWidth || 1;\n    return this.intersects(x, y, epsilon) || this.isOnLabel(x, y);\n  }\n\n  getCenterPoint() {\n    return {\n      x: (this.x2 + this.x) / 2,\n      y: (this.y2 + this.y) / 2\n    };\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, options} = this;\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    // Draw\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  drawLabel(ctx, chartArea) {\n    if (this.labelIsVisible(chartArea)) {\n      ctx.save();\n      drawLabel(ctx, this, chartArea);\n      ctx.restore();\n    }\n  }\n\n  resolveElementProperties(chart, options) {\n    const scale = chart.scales[options.scaleID];\n    let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n    let min, max;\n\n    if (scale) {\n      min = scaleValue(scale, options.value, NaN);\n      max = scaleValue(scale, options.endValue, min);\n      if (scale.isHorizontal()) {\n        x = min;\n        x2 = max;\n      } else {\n        y = min;\n        y2 = max;\n      }\n    } else {\n      const xScale = chart.scales[options.xScaleID];\n      const yScale = chart.scales[options.yScaleID];\n\n      if (xScale) {\n        x = scaleValue(xScale, options.xMin, x);\n        x2 = scaleValue(xScale, options.xMax, x2);\n      }\n\n      if (yScale) {\n        y = scaleValue(yScale, options.yMin, y);\n        y2 = scaleValue(yScale, options.yMax, y2);\n      }\n    }\n    const inside = isLineInArea({x, y, x2, y2}, chart.chartArea);\n    return inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\nLineAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderWidth: 2,\n  borderDash: [],\n  borderDashOffset: 0,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderWidth: 0,\n    drawTime: undefined,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    color: '#fff',\n    xPadding: 6,\n    yPadding: 6,\n    rotation: 0,\n    position: 'center',\n    xAdjust: 0,\n    yAdjust: 0,\n    textAlign: 'center',\n    width: undefined,\n    height: undefined,\n    enabled: false,\n    content: null\n  },\n  value: undefined,\n  endValue: undefined,\n  scaleID: undefined,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction calculateAutoRotation(line) {\n  const {x, y, x2, y2} = line;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\nfunction drawLabel(ctx, line, chartArea) {\n  const label = line.options.label;\n  const {borderWidth, xPadding, yPadding, content} = label;\n  const font = toFont(label.font);\n  ctx.font = font.string;\n\n  const {width, height} = measureLabel(ctx, label, font);\n  const rect = line.labelRect = calculateLabelPosition(line, width, height, chartArea);\n\n  ctx.translate(rect.x, rect.y);\n  ctx.rotate(rect.rotation);\n\n  ctx.fillStyle = label.backgroundColor;\n  const stroke = setBorderStyle(ctx, label);\n\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x: -(width / 2), y: -(height / 2), w: width, h: height,\n    // TODO: v2 remove support for cornerRadius\n    radius: clampAll(toTRBLCorners(valueOrDefault(label.cornerRadius, label.borderRadius)), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.stroke();\n  }\n\n  ctx.fillStyle = label.color;\n  if (content instanceof Image) {\n    const x = -(width / 2) + xPadding + borderWidth / 2;\n    const y = -(height / 2) + yPadding + borderWidth / 2;\n    ctx.drawImage(content, x, y, width - (2 * xPadding) - borderWidth, height - (2 * yPadding) - borderWidth);\n  } else {\n    const labels = isArray(content) ? content : [content];\n    const x = calculateLabelXAlignment(label, width);\n    const y = -(labels.length - 1) * font.lineHeight / 2;\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = label.textAlign;\n    labels.forEach((l, i) => ctx.fillText(l, x, y + (i * font.lineHeight)));\n  }\n}\n\nfunction setBorderStyle(ctx, options) {\n  if (options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle;\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\nfunction calculateLabelXAlignment(label, width) {\n  const {textAlign, xPadding, borderWidth} = label;\n  if (textAlign === 'start') {\n    return -(width / 2) + xPadding + borderWidth / 2;\n  } else if (textAlign === 'end') {\n    return +(width / 2) - xPadding - borderWidth / 2;\n  }\n  return 0;\n}\n\nfunction getImageSize(size, value) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (typeof value === 'string') {\n    return toPercent(value) * size;\n  }\n  return size;\n}\n\nconst widthCache = new Map();\nfunction measureLabel(ctx, label, font) {\n  const content = label.content;\n  const borderWidth = label.borderWidth;\n\n  if (content instanceof Image) {\n    return {\n      width: getImageSize(content.width, label.width) + 2 * label.xPadding + borderWidth,\n      height: getImageSize(content.height, label.height) + 2 * label.yPadding + borderWidth\n    };\n  }\n  const lines = isArray(content) ? content : [content];\n  const count = lines.length;\n  let width = 0;\n  for (let i = 0; i < count; i++) {\n    const text = lines[i];\n    const key = font.string + '-' + text;\n    if (!widthCache.has(key)) {\n      widthCache.set(key, ctx.measureText(text).width);\n    }\n    width = Math.max(width, widthCache.get(key));\n  }\n  width += 2 * label.xPadding + borderWidth;\n\n  return {\n    width,\n    height: count * font.lineHeight + label.yPadding * 2 + borderWidth\n  };\n}\n\nfunction calculateLabelPosition(line, width, height, chartArea) {\n  const label = line.options.label;\n  const {xAdjust, yAdjust, xPadding, yPadding, position} = label;\n  const p1 = {x: line.x, y: line.y};\n  const p2 = {x: line.x2, y: line.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(line) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(line, position, size, chartArea);\n  const pt = pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: xPadding};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: yPadding};\n\n  return {\n    x: adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust,\n    y: adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust,\n    width,\n    height,\n    rotation\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(line, position, rotSize, chartArea) {\n  let t = 0.5;\n  const space = spaceAround(line, chartArea);\n  const label = line.options.label;\n  if (position === 'start') {\n    t = calculateTAdjust({w: line.x2 - line.x, h: line.y2 - line.y}, rotSize, label, space);\n  } else if (position === 'end') {\n    t = 1 - calculateTAdjust({w: line.x - line.x2, h: line.y - line.y2}, rotSize, label, space);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, labelSize, label, space) {\n  const {xPadding, yPadding} = label;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + xPadding - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + yPadding - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(line, chartArea) {\n  const {x, x2, y, y2} = line;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l < r ? 1 : -1,\n    dy: t < b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n\n  return coordinate;\n}\n","import {toRadians} from 'chart.js/helpers';\nimport BoxAnnotation from './box';\n\nexport default class EllipseAnnotation extends BoxAnnotation {\n\n  inRange(x, y) {\n    return pointInEllipse({x, y}, this);\n  }\n\n  draw(ctx) {\n    const {width, height, options} = this;\n    const center = this.getCenterPoint();\n\n    ctx.save();\n\n    ctx.translate(center.x, center.y);\n    if (options.rotation) {\n      ctx.rotate(toRadians(options.rotation));\n    }\n\n    ctx.beginPath();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    ctx.ellipse(0, 0, height / 2, width / 2, Math.PI / 2, 0, 2 * Math.PI);\n\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  rotation: 0,\n  xScaleID: 'x',\n  xMin: undefined,\n  xMax: undefined,\n  yScaleID: 'y',\n  yMin: undefined,\n  yMax: undefined\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction pointInEllipse(p, ellipse) {\n  const {width, height} = ellipse;\n  const center = ellipse.getCenterPoint(true);\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n\n  return (Math.pow(p.x - center.x, 2) / Math.pow(xRadius, 2)) + (Math.pow(p.y - center.y, 2) / Math.pow(yRadius, 2)) <= 1.0;\n}\n","import {Element} from 'chart.js';\nimport {scaleValue} from '../helpers';\n\nexport default class PointAnnotation extends Element {\n\n  inRange(x, y) {\n    const {width, options} = this;\n    const center = this.getCenterPoint(true);\n    const radius = width / 2 + options.borderWidth;\n\n    if (radius <= 0) {\n      return false;\n    }\n\n    return (Math.pow(x - center.x, 2) + Math.pow(y - center.y, 2)) <= Math.pow(radius, 2);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  draw(ctx) {\n    const {x, y, width, options} = this;\n\n    ctx.save();\n\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    ctx.fillStyle = options.backgroundColor;\n\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n\n    ctx.beginPath();\n    ctx.arc(x, y, width / 2, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const {chartArea, scales} = chart;\n    const xScale = scales[options.xScaleID];\n    const yScale = scales[options.yScaleID];\n    let x = chartArea.width / 2;\n    let y = chartArea.height / 2;\n\n    if (xScale) {\n      x = scaleValue(xScale, options.xValue, x);\n    }\n\n    if (yScale) {\n      y = scaleValue(yScale, options.yValue, y);\n    }\n\n    return {\n      x,\n      y,\n      width: options.radius * 2,\n      height: options.radius * 2\n    };\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  display: true,\n  adjustScaleRange: true,\n  borderDash: [],\n  borderDashOffset: 0,\n  borderWidth: 1,\n  radius: 10,\n  xScaleID: 'x',\n  xValue: undefined,\n  yScaleID: 'y',\n  yValue: undefined\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n","import {Animations, Chart, defaults} from 'chart.js';\nimport {clipArea, unclipArea, isFinite, valueOrDefault, isObject, isArray} from 'chart.js/helpers';\nimport {handleEvent, hooks, updateListeners} from './events';\nimport BoxAnnotation from './types/box';\nimport LineAnnotation from './types/line';\nimport EllipseAnnotation from './types/ellipse';\nimport PointAnnotation from './types/point';\nimport {version} from '../package.json';\n\nconst chartStates = new Map();\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  line: LineAnnotation,\n  ellipse: EllipseAnnotation,\n  point: PointAnnotation\n};\n\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation'\n  });\n});\n\nexport default {\n  id: 'annotation',\n\n  version,\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n  },\n\n  beforeDatasetsDraw(chart) {\n    draw(chart, 'beforeDatasetsDraw');\n  },\n\n  afterDatasetsDraw(chart) {\n    draw(chart, 'afterDatasetsDraw');\n  },\n\n  beforeDraw(chart) {\n    draw(chart, 'beforeDraw');\n  },\n\n  afterDraw(chart) {\n    draw(chart, 'afterDraw');\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    handleEvent(chart, state, args.event, options);\n  },\n\n  destroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n\n  defaults: {\n    drawTime: 'afterDatasetsDraw',\n    dblClickSpeed: 350, // ms\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height'],\n        type: 'number'\n      },\n    },\n    label: {\n      drawTime: null\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop),\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[opts.type || 'line'].id}`,\n    },\n  },\n\n  additionalOptionScopes: ['']\n};\n\nconst directUpdater = {\n  update: Object.assign\n};\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotation = annotations[i];\n    let el = elements[i];\n    const elType = annotationTypes[annotation.type] || annotationTypes.line;\n    if (!el || !(el instanceof elType)) {\n      el = elements[i] = new elType();\n    }\n    const opts = resolveAnnotationOptions(annotation.setContext(getContext(chart, el, annotation)));\n    const properties = el.resolveElementProperties(chart, opts);\n    properties.skip = isNaN(properties.x) || isNaN(properties.y);\n    properties.options = opts;\n    animations.update(el, properties);\n  }\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elType = annotationTypes[resolver.type] || annotationTypes.line;\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result, resolveObj(resolver, elType.defaults), resolveObj(resolver, elType.defaultRoutes));\n  for (const hook of hooks) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const name of Object.keys(defs)) {\n    const optDefs = defs[name];\n    const value = resolver[name];\n    result[name] = isObject(optDefs) ? resolveObj(value, optDefs) : value;\n  }\n  return result;\n}\n\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nfunction draw(chart, caller) {\n  const {ctx, chartArea} = chart;\n  const state = chartStates.get(chart);\n  const elements = state.elements.filter(el => !el.skip && el.options.display);\n\n  clipArea(ctx, chartArea);\n  elements.forEach(el => {\n    if (el.options.drawTime === caller) {\n      el.draw(ctx);\n    }\n  });\n  unclipArea(ctx);\n\n  elements.forEach(el => {\n    if ('drawLabel' in el && el.options.label && (el.options.label.drawTime || el.options.drawTime) === caller) {\n      el.drawLabel(ctx, chartArea);\n    }\n  });\n}\n\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(scale, annotations);\n  let changed = false;\n  if (isFinite(range.min) &&\n\t\ttypeof scale.options.min === 'undefined' &&\n\t\ttypeof scale.options.suggestedMin === 'undefined') {\n    changed = scale.min !== range.min;\n    scale.min = range.min;\n  }\n  if (isFinite(range.max) &&\n\t\ttypeof scale.options.max === 'undefined' &&\n\t\ttypeof scale.options.suggestedMax === 'undefined') {\n    changed = scale.max !== range.max;\n    scale.max = range.max;\n  }\n  if (changed && typeof scale.handleTickRangeOptions === 'function') {\n    scale.handleTickRangeOptions();\n  }\n}\n\nfunction getScaleLimits(scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  let min = valueOrDefault(scale.min, Number.NEGATIVE_INFINITY);\n  let max = valueOrDefault(scale.max, Number.POSITIVE_INFINITY);\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      for (const prop of ['value', 'endValue']) {\n        const raw = annotation[prop];\n        if (raw) {\n          const value = scale.parse(raw);\n          min = Math.min(min, value);\n          max = Math.max(max, value);\n        }\n      }\n    } else if (annotation[scaleIDOption] === scaleID) {\n      for (const prop of [axis + 'Min', axis + 'Max', axis + 'Value']) {\n        const raw = annotation[prop];\n        if (raw) {\n          const value = scale.parse(raw);\n          min = Math.min(min, value);\n          max = Math.max(max, value);\n        }\n      }\n    }\n  }\n  return {min, max};\n}\n","import {Chart} from 'chart.js';\nimport Annotation from './annotation';\n\nChart.register(Annotation);\n\nexport default Annotation;\n"],"names":["clickHooks","moveHooks","hooks","concat","handleEvent","chart","state","event","options","listened","type","moveListened","element","getNearestItem","elements","previous","hovered","dispatchEvent","leave","listeners","enter","dispatchMoveEvents","handleMoveEvents","elOpts","dblclick","click","clickTimeout","clearTimeout","setTimeout","dblClickSpeed","handleClickEvents","handler","callHandler","position","minDistance","Number","POSITIVE_INFINITY","filter","display","inRange","x","y","reduce","nearestItems","center","getCenterPoint","distance","distanceBetweenPoints","push","sort","a","b","_index","slice","clamp","from","to","Math","min","max","clampAll","obj","key","Object","keys","scaleValue","scale","value","fallback","parse","isFinite","getPixelForValue","BoxAnnotation","Element","mouseX","mouseY","useFinalPosition","width","height","this","getProps","draw","ctx","save","lineWidth","borderWidth","strokeStyle","borderColor","fillStyle","backgroundColor","setLineDash","borderDash","lineDashOffset","borderDashOffset","beginPath","addRoundedRectPath","w","h","radius","toTRBLCorners","valueOrDefault","cornerRadius","borderRadius","closePath","fill","stroke","restore","resolveElementProperties","xScale","scales","xScaleID","yScale","yScaleID","top","left","bottom","y2","right","x2","chartArea","xMin","xMax","yMin","yMax","id","defaults","adjustScaleRange","undefined","defaultRoutes","PI","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","isLineInArea","limitPointToArea","LineAnnotation","intersects","epsilon","sqr","v","x1","y1","dx","dy","lenSq","xx","yy","labelIsVisible","label","enabled","content","isOnLabel","labelRect","point","angle","rotation","cos","sin","cx","cy","w2","h2","moveTo","lineTo","drawLabel","line","xPadding","yPadding","font","toFont","string","Image","getImageSize","lines","isArray","count","length","i","text","widthCache","has","set","measureText","get","lineHeight","measureLabel","rect","xAdjust","yAdjust","atan2","calculateAutoRotation","toRadians","size","rotatedSize","rotSize","space","l","r","spaceAround","calculateTAdjust","calculateT","pt","xCoordinateSizes","padding","yCoordinateSizes","adjustLabelCoordinate","calculateLabelPosition","translate","rotate","lineCap","borderCapStyle","lineJoin","borderJoinStyle","setBorderStyle","color","drawImage","labels","textAlign","calculateLabelXAlignment","textBaseline","forEach","fillText","scaleID","NaN","endValue","isHorizontal","area","limitLineToArea","s","endsWith","parseFloat","drawTime","family","style","weight","Map","lineSize","labelSize","lineW","lineH","coordinate","labelSizes","halfSize","EllipseAnnotation","p","ellipse","xRadius","yRadius","pow","pointInEllipse","PointAnnotation","arc","xValue","yValue","chartStates","annotationTypes","box","describe","_fallback","version","afterRegister","Chart","register","afterUnregister","unregister","beforeInit","annotations","beforeUpdate","args","annotationOptions","isObject","afterDataLimits","range","axis","scaleIDOption","NEGATIVE_INFINITY","annotation","prop","raw","getScaleLimits","changed","suggestedMin","suggestedMax","handleTickRangeOptions","afterUpdate","hook","scope","updateListeners","mode","animations","animOpts","directUpdater","Animations","resolveAnimations","start","add","splice","Array","resyncElements","el","elType","opts","resolveAnnotationOptions","setContext","getContext","properties","skip","isNaN","update","updateElements","beforeDatasetsDraw","afterDatasetsDraw","beforeDraw","afterDraw","beforeEvent","destroy","delete","_getState","numbers","descriptors","_indexable","_scriptable","includes","_allKeys","additionalOptionScopes","assign","resolver","result","resolveObj","defs","name","optDefs","$context","create","caller","clipArea","unclipArea","Annotation"],"mappings":"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"}